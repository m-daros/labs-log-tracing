version: '3.3'

services:

#----------------------------------------------------------------------------------------------

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.3.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    privileged: true
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    
#    volumes:
#      - ./elasticsearch:/usr/share/elasticsearch/data:rw
 
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      retries: 10
      interval: 20s
 
    volumes:
    
# PROVA MAX
#      - esdata:/usr/share/elasticsearch/data 
      - ./elasticsearch:/usr/share/elasticsearch/data:rw
      
    
    ports:
      - 9200:9200
      - 9300:9300

#----------------------------------------------------------------------------------------------

  kibana:
    image: docker.elastic.co/kibana/kibana:7.3.1
    container_name: kibana
    
    volumes:
      #- ./kibana/config:/usr/share/kibana/config:rw
      - ./kibana/data:/usr/share/kibana/data:rw
    
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_URL: http://elasticsearch:9200/
    ports:
      - 5601:5601
    ulimits:
      nproc: 65535
      memlock:
        soft: -1
        hard: -1
    cap_add:
      - ALL
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://kibana:5601/"]
      retries: 10
      interval: 10s
    
    depends_on:
      - elasticsearch
      
#----------------------------------------------------------------------------------------------

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.3.1
    
    hostname: "{{.Node.Hostname}}-filebeat"
    
    # Need to override user so we can access the log files, and docker.sock
    user: root
    
    volumes:
    
      # config file
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:rw
      
      # log files to harvest
      - ./logs/:/usr/share/logs/:ro
      
      # Used by filebeat.autodiscover
      #- /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    
    environment:
        
      # elasticsearch output not used
      - ELASTICSEARCH_HOST=elasticsearch:9200
      - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
      - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}

      - KIBANA_HOST=kibana:5601
      - LOGSTASH_HOST=logstash:5044
    
    # disable strict permission checks --strict.perms=false
    command: filebeat --strict.perms=false

    depends_on:
      - logstash
      - elasticsearch
      
#----------------------------------------------------------------------------------------------

  logstash:
    image: docker.elastic.co/logstash/logstash:7.3.1
        
    links:
      - elasticsearch
        
    ports:
      - 5400:5400
      - 9600:9600

    volumes:
     
      - ./logstash/config/:/usr/share/logstash/config/

    environment:
        
      # elasticsearch output not used
      - ELASTICSEARCH_HOST=elasticsearch:9200
      
      # PROVA MAX per problema Unrecognized VM option 'UseParNewGC'
      - -XX:+UseG1GC
        
    command: logstash -f /usr/share/logstash/config/dynservices-logs-pipeline.conf
           
    depends_on:
      - elasticsearch

#----------------------------------------------------------------------------------------------

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.3.1
     
        
    ports:
      - 8200:8200

    environment:
        
      - ELASTICSEARCH_HOST=elasticsearch:9200
        
    command: apm-server -e
        
    healthcheck:
      test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://apm-server:8200/healthcheck"]
      retries: 10
      interval: 10s
        
    depends_on:
      - elasticsearch
      
#----------------------------------------------------------------------------------------------

# PROVA MAX
#volumes:
#  esdata:
#    driver: local